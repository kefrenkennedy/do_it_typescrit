swagger: "2.0"
info:
  version: "1.0"
  title: Do.It
  description: "
Do.it is an Full-Stack web application that assists users in their daily lives by managing tasks. It is a simple yet robust application. The app includes complete CRUDs for users and tasks.
"
  contact: {}
host: localhost:3333
basePath: /
securityDefinitions: {}
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /dashboard/user:
    post:
      description: ""


      summary: Create User
      tags:
        - Users
      operationId: CreateUser
      deprecated: false
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
        - name: Content-Type
          in: header
          required: false
          enum:
            - application/json
          type: string
          description: ""
        - name: Body
          in: body
          required: true
          description: ""
          schema:
            $ref: "#/definitions/CreateUserRequest"
      responses:
        "200":
          description: ""
          headers: {}
    get:
      description: ""
      summary: Get Users
      tags:
        - Users
      operationId: GetUsers
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
      responses:
        "200":
          description: ""
          headers: {}
  /login:
    post:
      description: ""
      summary: Login
      tags:
        - Users
      operationId: Login
      deprecated: false
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
        - name: Content-Type
          in: header
          required: false
          enum:
            - application/json
          type: string
          description: ""
        - name: Body
          in: body
          required: true
          description: ""
          schema:
            $ref: "#/definitions/LoginRequest"
      responses:
        "200":
          description: ""
          headers: {}
  /dashboard/user/0fc4c8e1-050b-4850-b495-b574bbc0f6fb:
    patch:
      description: ""
      summary: Update User
      tags:
        - Users
      operationId: UpdateUser
      deprecated: false
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
        - name: Content-Type
          in: header
          required: false
          enum:
            - application/json
          type: string
          description: ""
        - name: Body
          in: body
          required: true
          description: ""
          schema:
            $ref: "#/definitions/UpdateUserRequest"
      responses:
        "200":
          description: ""
          headers: {}
    delete:
      description: Deletes a collection.
      summary: Delete User
      tags:
        - Users
      operationId: DeleteUser
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
      responses:
        "200":
          description: ""
          headers: {}
  /dashboard/task:
    post:
      description: ""
      summary: Create Task
      tags:
        - Tasks
      operationId: CreateTask
      deprecated: false
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
        - name: Content-Type
          in: header
          required: false
          enum:
            - application/json
          type: string
          description: ""
        - name: Body
          in: body
          required: true
          description: ""
          schema:
            $ref: "#/definitions/CreateTaskRequest"
      responses:
        "200":
          description: ""
          headers: {}
    get:
      description: ""
      summary: Get User's Task
      tags:
        - Tasks
      operationId: GetUser'sTask
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
      responses:
        "200":
          description: ""
          headers: {}
  /dashboard/task/search:
    get:
      description: ""
      summary: Search Task
      tags:
        - Tasks
      operationId: SearchTask
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
      responses:
        "200":
          description: ""
          headers: {}
  /dashboard/task/complete/d9875db0-c515-4cb8-ab6f-9f47801e25fa:
    patch:
      summary: Complete Task
      tags:
        - Tasks
      operationId: CompleteTask
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
      responses:
        "200":
          description: ""
          headers: {}
  /dashboard/task/ae114af7-35d2-4472-b2f4-610975bf81ca:
    patch:
      description: ""
      summary: Update Task
      tags:
        - Tasks
      operationId: UpdateTask
      deprecated: false
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
        - name: Content-Type
          in: header
          required: false
          enum:
            - application/json
          type: string
          description: ""
        - name: Body
          in: body
          required: true
          description: ""
          schema:
            $ref: "#/definitions/UpdateTaskRequest"
      responses:
        "200":
          description: ""
          headers: {}
    delete:
      description: Deletes a collection.
      summary: Delete Task
      tags:
        - Tasks
      operationId: DeleteTask
      deprecated: false
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          default: Bearer {token}
          type: string
      responses:
        "200":
          description: ""
          headers: {}
definitions:
  CreateUserRequest:
    title: CreateUserRequest
    example:
      name: Michael Joseph
      email: mj@email.com
      password: a2A@a2A@
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      password:
        type: string
    required:
      - name
      - email
      - password
  LoginRequest:
    title: LoginRequest
    example:
      email: mj@email.com
      password: a2A@a2A@
    type: object
    properties:
      email:
        type: string
      password:
        type: string
    required:
      - email
      - password
  UpdateUserRequest:
    title: UpdateUserRequest
    example:
      name: UPDATED
      email: UPDATED@email.com
    type: object
    properties:
      name:
        type: string
      email:
        type: string
    required:
      - name
      - email
  CreateTaskRequest:
    title: CreateTaskRequest
    example:
      title: read the backend docs pt. 2
      description: check if the routes are funtioning
    type: object
    properties:
      title:
        type: string
      description:
        type: string
    required:
      - title
      - description
  UpdateTaskRequest:
    title: UpdateTaskRequest
    example:
      title: Read the backend docs pt. 1
      description: Check out the postman's file's routes
    type: object
    properties:
      title:
        type: string
      description:
        type: string
    required:
      - title
      - description
security: []
tags:
  - name: Users
    description: The `/me` endpoints let you manage information about the authenticated user.
  - name: Tasks
    description: ""
